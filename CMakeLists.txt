cmake_minimum_required(VERSION 2.8)

string(ASCII 27 ESCAPE)

function (clrscr)
    file(WRITE /dev/stdout "${ESCAPE}[2J")
endfunction(clrscr)

function(textXY X Y MSG)
    file(WRITE /dev/stdout "${ESCAPE}[${Y};${X}H${MSG}")
endfunction(textXY)

macro(max a b m)
	if(${a} LESS ${${b}})
		set(${m} ${${b}})
	else(${a} LESS ${${b}})
		set(${m} ${${a}})
	endif(${a} LESS ${${b}})
endmacro(max)

macro(min a b m)
	if(${a} LESS ${${b}})
		set(${m} ${${a}})
	else(${a} LESS ${${b}})
		set(${m} ${${b}})
	endif(${a} LESS ${${b}})
endmacro(min)

macro(abs a res)
	if(${a} LESS 0)
		string(LENGTH ${${a}} len)
		math(EXPR len_1 '${len}-1')
		string(SUBSTRING ${${a}} 1 ${len_1} ${res})
	else(${a} LESS 0)
		set(${res} ${${a}})
	endif(${a} LESS 0)
endmacro(abs)

function(line x1 y1 x2 y2 chr)
	math(EXPR Dx "${x2} - ${x1}")
	abs(Dx aDx)
	math(EXPR Dy "${y2} - ${y1}")
	abs(Dy aDy)
	max(aDx aDy Dmax)
	set(i 0)
	while(i LESS ${Dmax})
		math(EXPR cx "${x1} + ${i} * (0${Dx} * 100 / ${Dmax}) / 100")
		math(EXPR cy "${y1} + ${i} * (0${Dy} * 100 / ${Dmax}) / 100")
		textXY(${cx} ${cy} ${chr})
		math(EXPR i "${i} + 1")
	endwhile(i LESS ${Dmax})
endfunction(line)

clrscr()
line(10 10 50 60 "+")

#while(true)
#    set(KEY "")
#    file(READ /dev/input/mice KEY LIMIT 10)
#    string(LENGTH "${KEY}" LEN)
#    if(${LEN} GREATER 0)
#		message("key: ${KEY} len: ${LEN}")
#    endif(${LEN} GREATER 0)
#endwhile(true)
